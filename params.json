{"name":"Pydsl","tagline":"Python Domain Specific Language Tools","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"DESCRIPTION\r\n===========\r\n\r\npydsl is a language workbench written in python\r\nThe main idea is to allow an easy way to define, use and combine DSLs to create programs.\r\npydsl support several grammar specification formats:\r\n * regular expressions\r\n * pydsl BNF format\r\n * ANLTR .g format (not supported yet)\r\n * mongo database query dictionaries\r\n * python ply module (only check support)\r\n\r\neach grammar definition have the following properties:\r\n * enum(gd): yields a list of accepted words\r\n * first(gd): yields a list of the first accepted subword/char\r\n * minsize(gd): length of the smaller accepted word\r\n * maxsize(gd): length of the biggest accepted word\r\n\r\npydsl offer a set of functionalities that use _grammar definitions_\r\n * check(gd, input): test the input string against the spec\r\n * validate(gd, input): test the input string against the spec. In case of failure, it returns a list of errors\r\n * guess(input, [gd]): returns a list of _grammar definitions_ that are compatible with the input\r\n * partition(gd, input, tag): returns the parts of the input according to a tag\r\n * extract(gd, input): extract all the slices of the input that are accepted by _grammar definition_\r\n * distance(gd, input1, input2): returns the distance between two inputs according to _grammar definition_\r\n * translate(gd, input): generic translator\r\n   * ast(astdefinition, input): creates an abstract syntax tree according to astdefinition\r\n   * sdt( sdt, ast): Performs an AST translation using a Syntax Directed\r\n   Translator\r\n\r\nIt also offers library related functionalities:\r\n * search(query): search for an element within a memory\r\n * info(identifier): returns information about the element\r\n * translations(identifier): returns a list of available translators for identifier\r\n\r\nINSTALLATION\r\n============\r\n * disttools:\r\n   * python3 setup.py install\r\n * pip:\r\n   * pip install git+http://github.com/nesaro/pydsl.git\r\n   * pip install git+http://github.com/nesaro/pydsl-contrib.git\r\n\r\nUSAGE\r\n=====\r\nTo use pydsl as a library for your code, you can:\r\n\r\nLoading content from files\r\n--------------------------\r\n    from pydsl.Memory.Storage.File.BNF import load_bnf_file\r\n    grammardefinition = loand_bnf_file('myfile.bnf')\r\n    from pydsl.Memory.Loader import *\r\n    mychecker = load_checker(grammardefinition)\r\n    mychecker('mystring') # returns True or False\r\n\r\nLoading content from a directory\r\n--------------------------------\r\nFirst store your grammar definitions in a directory,\r\n\r\n    from pydsl.Memory.Storage.Directory.Grammar import GrammarDirStorage\r\n    from pydsl.Guess import Guesser\r\n    a = GrammarDirStorage(\"directory/\")\r\n    guess = Guesser([a])\r\n    guess('string')\r\n\r\nUsing pydsl-contrib\r\n-------------------\r\n * Download pydsl-contrib repositorie from github\r\n * install with python3 setup.py install\r\n * use default libraries and transformers\r\n\r\ncode:\r\n\r\n    from pydsl.Memory.Loader import *\r\n    mychecker = load_checker(integer)\r\n    mytransformer = load_function('inttohex')\r\n    result = a({'input':'123'})\r\n\r\nBINARIES\r\n========\r\nMemory Management\r\n-----------------\r\n * info.py: Retrieves an element from memory and shows a summary\r\n * search.py: Searchs memory \r\n\r\nGrammars\r\n--------\r\n * check.py: Checks if input data belongs to a grammar\r\n * guess:py: Determines input data type\r\n * validate.py: Perform a validation routine for user data according to a grammar\r\n\r\nFunctions\r\n---------\r\n * translate.py: Process user input using a function\r\n\r\n\r\nREQUIREMENTS\r\n============\r\n * python >= 3.0\r\n * pydsl contrib package ( https://github.com/nesaro/pydsl-contrib )\r\n * optional: ply library ( http://www.dabeaz.com/ply/ )\r\n\r\nHELP\r\n====\r\n * http://github.com/nesaro/pydsl\r\n * nesaro@gmail.com\r\n\r\nLICENSE\r\n=======\r\nGPLv3, see LICENSE file\r\n\r\nABOUT\r\n=====\r\npydsl is a formal and natural language framework.\r\nCopyright (C) 2008-2012 Nestor Arocha (nesaro@gmail.com)\r\n"}